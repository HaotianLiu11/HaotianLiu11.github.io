{"meta":{"title":"福江 の いえ","subtitle":"富江江江江","description":"一只孜孜不倦的程序猿，立志把分享变成一种习惯！","author":"Fu JANG","url":"http://liuhaotian.top","root":"/"},"pages":[{"title":"分类","date":"2020-05-26T05:00:55.000Z","updated":"2020-05-27T04:57:46.858Z","comments":false,"path":"categories/index.html","permalink":"http://liuhaotian.top/categories/index.html","excerpt":"","text":""},{"title":"留言板","date":"2020-05-26T05:00:55.000Z","updated":"2020-05-29T12:23:57.525Z","comments":true,"path":"comments/index.html","permalink":"http://liuhaotian.top/comments/index.html","excerpt":"","text":"欢迎大家留言给我鸭，我都会看到的~"},{"title":"标签","date":"2020-05-26T05:00:55.000Z","updated":"2020-05-27T04:58:17.182Z","comments":false,"path":"tags/index.html","permalink":"http://liuhaotian.top/tags/index.html","excerpt":"","text":""},{"title":"友链","date":"2020-05-26T05:00:55.000Z","updated":"2020-05-27T13:39:16.948Z","comments":true,"path":"link/index.html","permalink":"http://liuhaotian.top/link/index.html","excerpt":"","text":"想分享友情链接的小伙伴留言即可~"},{"title":"关于我","date":"2020-05-27T09:20:50.000Z","updated":"2020-08-17T11:14:41.642Z","comments":true,"path":"about/index.html","permalink":"http://liuhaotian.top/about/index.html","excerpt":"","text":"征婚启事我是个普普通通的大二学生，来自普普通通的大学，有着普普通通的生活，不知不觉已经19了，最大的梦想是找个女朋友！ 不过要实现找个妞陪我的梦想好难好难，所以我退而求其次，希望自己未来可以过一个好生活，然后再找个妞，曲线救国哈哈哈。 不过未来想活的好就得有money呀，虽然俗气了一些。但是毕竟贫贱夫妻百事哀嘛，所以为了给将来的老婆买包，我要努力努力努力努力努力努力！！！ 最近想努力奋斗，然后在ACM或者蓝桥杯中拿个好名次，and now自己同时在学习编程知识(后端开发)，不过学业荒废了好久emmmmm… 联系方式热烈欢迎女同学来找我玩儿！！五大三粗并且要请教问题的汉子就不要加了emmmm我怕入坑… QQ： 2235749416 微信： a13019949398 日常热爱超喜欢你的名字、天气之子、大鱼海棠，因为女主都好温柔啊~ 还喜欢听音乐，温柔中带一点点忧郁那种类型，emmmm,当然也喜欢敲代码…还有我超级老实，一个本分的孩子就是我啦! 个人性格也很多愁善感，超级善变，泪点超低。就叨咕这么多啦~ 附图一张"},{"title":"音乐","date":"2020-05-27T11:17:35.000Z","updated":"2020-05-27T12:07:16.641Z","comments":false,"path":"music/index.html","permalink":"http://liuhaotian.top/music/index.html","excerpt":"","text":""}],"posts":[{"title":"LC 第 204 场周赛","slug":"LC-第-204-场周赛","date":"2020-09-02T00:27:33.000Z","updated":"2020-09-02T00:45:48.042Z","comments":true,"path":"2020/09/02/LC-第-204-场周赛/","link":"","permalink":"http://liuhaotian.top/2020/09/02/LC-%E7%AC%AC-204-%E5%9C%BA%E5%91%A8%E8%B5%9B/","excerpt":"","text":"LC 第 204 场周赛1566. 重复至少 K 次且长度为 M 的模式题意给你一个正整数数组 arr，请你找出一个长度为 m 且在数组中至少重复 k 次的模式。 模式 是由一个或多个值组成的子数组（连续的子序列），连续 重复多次但 不重叠 。 模式由其长度和重复次数定义。 如果数组中存在至少重复 k 次且长度为 m 的模式，则返回 true ，否则返回 false 。 思路由于 m 和 k 的范围很小，所以我们采取暴力法，遍历数组的所有符合条件的元素，查看以该元素为起始点的 m * k 的序列是否为定义的模式，且符合条件。 复杂度双重循环，时间复杂度为 O(n ^ 2)。 代码12345678910111213141516class Solution &#123; public: bool containsPattern(vector&lt;int&gt;&amp; arr, int m, int k) &#123; int n = arr.size(); for (int i = 0; i + m * k &lt;= n; i++) &#123; bool flag = true; for (int j = i; j &lt; i + m * k; j++) &#123; if (arr[j] != arr[i + (j - i) % m]) &#123; flag = false; &#125; &#125; if (flag) return true; &#125; return false; &#125;&#125;; 收获假设两个指针 i 在前，j 在后， 那么 j - i 为 j 对 i 的偏移量，而 j - i + 1 为 [i, j] 的长度。 1567. 乘积为正数的最长子数组长度题意给你一个整数数组 nums ，请你求出乘积为正数的最长子数组的长度。 一个数组的子数组是由原数组中零个或者更多个连续数字组成的数组。 请你返回乘积为正数的最长子数组长度。 思路数组中有三类元素，分别为正数、负数、零，所以我们可以用 DP 来做这道题。 我们令 f[i] 代表以 i 为终止点且数组元素乘积为正数的最大的序列；我们令 g[i] 代表以 i 为终止点且数组元素乘积为负数的最大的序列。 复杂度DP 遍历，g 算一次，f 算一次，时间复杂度为 O(n)。 代码1234567891011121314151617181920212223242526class Solution &#123; public: int getMaxLen(vector&lt;int&gt;&amp; nums) &#123; int n = nums.size(); vector&lt;int&gt; f(n), g(n); if (nums[0] &gt; 0) f[0] = 1; else if (nums[0] &lt; 0) g[0] = 1; int res = f[0]; for (int i = 1; i &lt; n; i++) &#123; if (nums[i] &gt; 0) &#123; f[i] = f[i - 1] + 1; if (g[i - 1]) g[i] = g[i - 1] + 1; &#125; else if (nums[i] &lt; 0) &#123; g[i] = f[i - 1] + 1; if (g[i - 1]) f[i] = g[i - 1] + 1; &#125; res = max(res, f[i]); &#125; return res; &#125;&#125;; 收获收获是啥？见识了新东西？更熟悉 DP？ 1568. 使陆地分离的最少天数题意给你一个由若干 0 和 1 组成的二维网格 grid ，其中 0 表示水，而 1 表示陆地。岛屿由水平方向或竖直方向上相邻的 1 （陆地）连接形成。 如果 恰好只有一座岛屿 ，则认为陆地是 连通的 ；否则，陆地就是 分离的 。 一天内，可以将任何单个陆地单元（1）更改为水单元（0）。 返回使陆地分离的最少天数。 思路答案只可能是 0 或者 1 或者 2，因为如果陆地已经分离，那么不需要更改，返回 0 天。 此外，我们需要知道，一块连通的陆地分离做多需要两天，因为每块连通的陆地都有边界坐标，那么一定至少有一个坐标的陆地的四联通中的其二为水，剩余二为陆地，那么我们最多需要两天就可以把连通的陆地分离。 如果需要一天，我们则可以遍历联通陆地，依次取其中的一个坐标变为水，检测是否能让此联通的陆地分离，如果分离，则可以需要一天，如果不可以，则证明分离此陆地需要两天。 复杂度当为 1 个联通陆地时，我们遍历此连通块，依次替换单位坐标为水，时间复杂度为 n * n，每次替换之后 check 检查，所以总共的时间复杂度为 O(n^4)。 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445class Solution &#123;public: int n, m; vector&lt;vector&lt;bool&gt;&gt; st; vector&lt;vector&lt;int&gt;&gt; g; int dx[4] = &#123;-1, 0, 1, 0&#125;, dy[4] = &#123;0, 1, 0, -1&#125;; void dfs(int x, int y) &#123; st[x][y] = true; for (int i = 0; i &lt; 4; i++) &#123; int a = x + dx[i], b = y + dy[i]; if (a &gt;= 0 &amp;&amp; a &lt; n &amp;&amp; b &gt;= 0 &amp;&amp; b &lt; m &amp;&amp; ! st[a][b] &amp;&amp; g[a][b] == 1) dfs(a, b); &#125; &#125; bool check() &#123; int cnt = 0; st = vector&lt;vector&lt;bool&gt;&gt;(n, vector&lt;bool&gt;(m)); for (int i = 0; i &lt; n; i++) for (int j = 0; j &lt; m; j++) &#123; if (!st[i][j] &amp;&amp; g[i][j] == 1) &#123; cnt++; dfs(i, j); &#125; &#125; return cnt &gt; 1; &#125; int minDays(vector&lt;vector&lt;int&gt;&gt;&amp; grid) &#123; n = grid.size(), m = grid[0].size(); g = grid; if (check()) return 0; for (int i = 0; i &lt; n; i++) for (int j = 0; j &lt; m; j++) if (g[i][j]) &#123; g[i][j] = 0; if (check()) return 1; g[i][j] = 1; &#125; return 2; &#125;&#125;; 收获更加熟悉图论？题是好题，我是傻逼。 1569. 将子数组重新排序得到同一个二叉查找树的方案数题意给你一个数组 nums 表示 1 到 n 的一个排列。我们按照元素在 nums 中的顺序依次插入一个初始为空的二叉查找树（BST）。请你统计将 nums 重新排序后，统计满足如下条件的方案数：重排后得到的二叉查找树与 nums 原本数字顺序得到的二叉查找树相同。 比方说，给你 nums = [2,1,3]，我们得到一棵 2 为根，1 为左孩子，3 为右孩子的树。数组 [2,3,1] 也能得到相同的 BST，但 [3,2,1] 会得到一棵不同的 BST 。 请你返回重排 nums 后，与原数组 nums 得到相同二叉查找树的方案数。 由于答案可能会很大，请将结果对 10^9 + 7 取余数。 思路用到了组合计数，由于 C_n^m 其中的 n 和 m 的范围小于 2000，所以我们可以用杨辉三角形定理来求此组合计数并记录。 那么数组中的第一个元素的位置是确定的，不能改变，设为 k，之后所有的元素，把大于 k 的和小于 k 的元素依次存储，那么此题的答案就是两类数据（大于 k 和小于 k 的两组数据）的排序，和两组数据内部的排序的乘积。 之后对两组数据内部递归排列，每次递归会确定一个元素的次数，最后求得答案。 复杂度每次递归筛出一个元素，所以外重循环是遍历数组所有元素，每次筛时遍历数组分大小，所以时间复杂度为 O(n^2)。 代码12345678910111213141516171819202122232425262728293031typedef long long LL;class Solution &#123; public: vector&lt;vector&lt;int&gt;&gt; C; const int MOD = 1e9 + 7; int numOfWays(vector&lt;int&gt;&amp; nums) &#123; int n = nums.size(); C = vector&lt;vector&lt;int&gt;&gt;(n + 1, vector&lt;int&gt;(n + 1)); for (int i = 0; i &lt;= n; i++) for (int j = 0; j &lt;= i; j++) if (!j) C[i][j] = 1; else C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % MOD; return (f(nums) + MOD - 1) % MOD; &#125; int f(vector&lt;int&gt; nums) &#123; if (nums.empty()) return 1; int n = nums.size(); int k = nums[0]; vector&lt;int&gt; left, right; for (auto x : nums) if (x &lt; k) left.push_back(x); else if (x &gt; k) right.push_back(x - k); return (LL)C[n - 1][k - 1] * f(left) % MOD * f(right) % MOD; &#125;&#125;; 收获拓宽视野！","categories":[{"name":"LC 周赛","slug":"LC-周赛","permalink":"http://liuhaotian.top/categories/LC-%E5%91%A8%E8%B5%9B/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://liuhaotian.top/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"HEXO+BUTTERFLY搭建骚气且实用的个人网站","slug":"HEXO-BUTTERFLY搭建骚气且实用的个人网站","date":"2020-05-27T03:01:58.000Z","updated":"2020-06-12T14:38:56.806Z","comments":true,"path":"2020/05/27/HEXO-BUTTERFLY搭建骚气且实用的个人网站/","link":"","permalink":"http://liuhaotian.top/2020/05/27/HEXO-BUTTERFLY%E6%90%AD%E5%BB%BA%E9%AA%9A%E6%B0%94%E4%B8%94%E5%AE%9E%E7%94%A8%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/","excerpt":"","text":"YOU CAN DRINK ALL YOU LIKE, BUT IN THE MORNING YOU GET HEADACHE WITH THE SAME PROBLEMS. 引子最近狂刷codeforces，但是逐渐发现自身一个问题，那就是刷过的题虽然在当天感觉很明白，但是隔一天，隔两天，就发现自己再遇到此题时又是一翻鏖战，这就是说明自己做过的题吸收的效率不够高，于是我就打算做一道题总结一道题。那么问题来了，在哪里总结呢？ 首先排除的是微信公众号，众所周知，微信公众号只能是自己分享东西的平台，而在这上面总结知识点就会引出很多问题，其一，每篇文章都要排版，其二，我的粉丝未必合此文章的胃口，其三，每天只能发布一篇文章，大大限制了自己的总结内容与时间分配。 那么诸如csdn、博客园、掘金、知乎这种东西呢？也有很多不方便的地方，比如文章左右侧的广告，实在影响人的心情，此外还有审核等等的制约，思前想后，我决定自己开辟一个个人网站。 当然不能从无到有手动开辟，自己能力有限，而且我的目的也是总结，总不能让自己以后把大把的时间浪费到维护网站上面去。于是我听从了大佬的建议，采用hexo+github的方式，hexo开辟网站，托管到github上面去。 花里胡哨的页面也是最吸引我的原因之一，我采用了butterfly的主题，绝对美炸天！ 过程过程当然是心酸+心酸+心酸，心态险些被搞没。至于搭建网站的教程，实话实说，看了n多篇技术总结，都号称史上最全，到最后还是觉得看官方文档最省事。 当然自己也找到了一些好的文章，在此列出来希望对大家有帮助： hexo安装文章： Hexo+Butterfly+Github+Coding搭建个人博客 hexo官方文档 butterfly主题系列文章： hexo-theme-butterfly 安装文档(一)快速开始 hexo-theme-butterfly 安装文档(二)主题页面 hexo-theme-butterfly 安装文档(三)主题配置 hexo-theme-butterfly 安装文档(四)主题问答、打赏名单 hexo-theme-butterfly 安装文档(五)更新日誌 收益没日没夜的折腾了两天，总能从其中学到什么：其一，当然是收获了又骚又实用的好网站；其二，学会了git+github的基本使用，常见的git命令也记得很熟；其三，收获了一种精神——永不放弃，哪有什么一帆风顺，加油，骚年！ 不足自己的网站弄的也不是很成熟，还有很多功能没有上线，比如日历、赞赏等，自己没有买域名，只是托管到github上。 欢迎我的个人网站","categories":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://liuhaotian.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://liuhaotian.top/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}],"categories":[{"name":"LC 周赛","slug":"LC-周赛","permalink":"http://liuhaotian.top/categories/LC-%E5%91%A8%E8%B5%9B/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://liuhaotian.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://liuhaotian.top/tags/%E7%AE%97%E6%B3%95/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://liuhaotian.top/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}